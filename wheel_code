package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpmode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.hardware.CRServo;

@TeleOp(name = "wheels", group= "")

public class Wheels extends LinearOpMode {

private DcMotor motorRR;
private DcMotor motorRF;
private DcMotor motorLR;
private DcMotor motorLF;
private DcMotor Duckmotor;
private CRServo orgServo;

private final double power = .7;

// RUN ONCE ON INIT()

 @Override
   public void runOpMode() {
    motorRR = hardwareMap.dcMotor.get("motorRR");
    motorRF = hardwareMap.dcMotor.get("motorRF");
    motorLR = hardwareMap.dcMotor.get("motorLR");
    Duckmotor = hardwareMap.dcMotor.get("Duckmotor");
    
     waitForStart();
      while (opModeIsActive()) {
      
      double y = -gamepad1.left_stick_y; //Remember, this is reversed!
      double x =  gamepad1.left_stick_x * 1.1; // Counteract imperfect strafting 
      double rx = gamepad1.right_stick_x;
      
// Denominator is the largest motor power (abosolut value or 1
//This ensures all the powers maitain the same ratio, but only when
// at least one is out of range [-1,1]

    double denominator = Math.max(Mathabs(y) + Math.abs(x) + Math.abs(x) + Math.abs(rx), 1);
    double frontLeftPower = (y + x + rx) / denominator;
    double backLeftPower = (y - x + rx) / denomintor;
    double frontRightPower = (y -x -rx) / denominator;
    double backRightPower = (y + x _rx) / denominator;
   
 motorLF.setPower(frontLeftPower):
 motorLR.setPower(backLeftPower);
 motorRF.setPower(frontRightPower);
 motorRR.setPower(backRightPower);
 
      if(gamepad1.right_trigger!=0){
         motorLF.setPower(-power*1.5);
         motorRF.setPower(-power*1.5);
         motorLR.setPower(power*1.5);
         motorRR.setPower(power);
       }

      
      
      
      
      
      
      
      
